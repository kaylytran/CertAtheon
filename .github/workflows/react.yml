# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions
name: Build and deploy React

on:
  push:
    branches: [ "main", "development" ]
  pull_request:
    branches: [ "main", "development" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'

      - name: Set up Node.js (for frontend)
        uses: actions/setup-node@v3
        with:
          node-version: '20'  # Ensure this matches your React project's Node.js version

      - name: Install Frontend dependencies
        run: |
          cd Frontend
          npm install

      - name: Debug Frontend Directory
        run: |
          ls -l Frontend

      - name: Build Frontend
        working-directory: CertAtheon/Frontend  # Ensures we are in the correct directory
        run: |
          cd
          npm install
          npm run build

      # - name: Move frontend build to backend wwwroot
      #   run: |
      #     Remove-Item -Recurse -Force Backend/wwwroot/*
      #     Move-Item -Path frontend/build/* -Destination Backend/wwwroot/ -Force

      - name: Build with dotnet
        run: dotnet build Backend/CertAtheon.csproj --configuration Release

      - name: Publish with dotnet
        run: dotnet publish Backend/CertAtheon.csproj -c Release -o myapp

      - name: Debug Build Output (Verify myapp exists)
        run: dir myapp

      - name: Zip the published app
        run: Compress-Archive -Path myapp/* -DestinationPath myapp.zip

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: .net-app
          path: myapp.zip

  deploy:
    runs-on: windows-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: .net-app
          path: .

      - name: Debug Deployment Path (Ensure myapp.zip exists)
        run: dir

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'CSCE590'
          slot-name: 'Production'
          package: myapp.zip
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_BE3F80DD1F3C46AFA4474BC175935A84 }}
