name: Code Coverage

on:
  push:
    branches: [ "main", "development" ]
  pull_request:
    branches: [ "main", "development" ]
  workflow_dispatch:

jobs:
  backend-coverage:
    runs-on: windows-latest
    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'

      - name: Clean previous coverage
        run: |
          if (Test-Path "TestResults") {
            Remove-Item -Path "TestResults" -Recurse -Force
          }

      - name: Run tests with coverage
        run: |
          dotnet test CertAtheon.sln 
            --configuration Release 
            --collect:"XPlat Code Coverage" 
            --results-directory TestResults 
            --logger "trx;LogFileName=test-results.trx" 
            -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=cobertura

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: backend-coverage
          path: TestResults/**/coverage.cobertura.xml

      - name: Publish coverage to PR
        uses: codecov/codecov-action@v4
        with:
          file: TestResults/**/coverage.cobertura.xml
          flags: backend
          name: backend-coverage
          fail_ci_if_error: false

  frontend-coverage:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: Frontend/package-lock.json

      - name: Install dependencies
        working-directory: Frontend
        run: npm ci

      - name: Run tests with coverage
        working-directory: Frontend
        run: |
          npm run test:coverage
          # If you don't have a coverage script, use:
          # npm test -- --coverage --coverageReporters=text-lcov --coverageDirectory=coverage

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: frontend-coverage
          path: Frontend/coverage/lcov.info

      - name: Publish coverage to PR
        uses: codecov/codecov-action@v4
        with:
          file: Frontend/coverage/lcov.info
          flags: frontend
          name: frontend-coverage
          fail_ci_if_error: false